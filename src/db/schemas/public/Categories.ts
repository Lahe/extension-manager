// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type { ColumnType, Selectable, Insertable, Updateable } from 'kysely';
import { z } from 'zod';

/** Identifier type for public.categories */
export type CategoriesId = number;

/** Represents the table public.categories */
export default interface CategoriesTable {
  id: ColumnType<CategoriesId, never, never>;

  name: ColumnType<string, string, string>;

  color: ColumnType<string, string, string>;

  createdAt: ColumnType<Date, Date | string | undefined, Date | string>;

  updatedAt: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type Categories = Selectable<CategoriesTable>;

export type NewCategories = Insertable<CategoriesTable>;

export type CategoriesUpdate = Updateable<CategoriesTable>;

export const categoriesId = z.number().transform(value => value as CategoriesId);

export const categories = z.object({
  id: categoriesId,
  name: z.string(),
  color: z.string(),
  createdAt: z.date(),
  updatedAt: z.date(),
});

export const categoriesInitializer = z.object({
  id: categoriesId.optional(),
  name: z.string(),
  color: z.string(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
});

export const categoriesMutator = z.object({
  id: categoriesId.optional(),
  name: z.string().optional(),
  color: z.string().optional(),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
});
